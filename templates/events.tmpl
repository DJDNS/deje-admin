<!DOCTYPE html>
<html>
<head>
    <title>Event Graph for {{ .Data.Channel.GetURL }}</title>
    <link href="css/graph.css" rel="stylesheet">
    <script src="js/require.js"></script>
    <script>
        require.config({
            baseUrl: "/js/",
            paths: {
                "jquery": "jquery-2.1.0.min",
                "d3": "d3.min"
            },
            shim: {
                "socket.io": {
                    exports: "io"
                }
            }
        });
    </script>
</head>
<body>
Event graph for <strong>{{ .Data.Channel.GetURL }}</strong>
(<a href="{{ with .Data.Channel }}/events?host={{ .Host }}&port={{ .Port }}&channel={{ .Channel }}{{ end }}{{ if not .Demo }}&demo=1{{ end }}">
switch to {{ if .Demo }}real data{{ else }}demo data{{ end }}?</a>)
<svg></svg>
<script>
require(['jquery', 'd3'], function($, d3) {

var width = 960,
    height = 400,
    url = '{{ if .Demo }}/events.json{{ else }}{{ with .Data.Channel }}/api/events?host={{ .Host }}&port={{ .Port }}&channel={{ .Channel }}{{ end }}{{ end }}';

var cluster = d3.layout.cluster()
    .size([height, width - 260]);

var diagonal = d3.svg.diagonal()
    .projection(function(d) { return [d.y, d.x]; });

var svg = d3.select("svg")
    .attr("width", width)
    .attr("height", height)
  .append("g")
    .attr("transform", "translate(40,0)");

function get_class(data) {
    return 'node' + (data.type ? ' ' + data.type : '');
}

function show_details(data) {
    $('#details').text(JSON.stringify(data.details, undefined, "  "));
}

d3.json(url, function(error, root) {
  var nodes = cluster.nodes(root),
      links = cluster.links(nodes);

  var link = svg.selectAll(".link")
      .data(links)
    .enter().append("path")
      .attr("class", "link")
      .attr("d", diagonal);

  var node = svg.selectAll(".node")
      .data(nodes)
    .enter().append("g")
      .attr("class", get_class)
      .attr("transform", function(d) { return "translate(" + d.y + "," + d.x + ")"; })
      .on('click', show_details);

  node.append("circle")
      .attr("r", 4.5);

  node.append("text")
      .attr("dx", function(d) { return d.type == 'root' ? -8 : 8; })
      .attr("dy", 3)
      .style("text-anchor", function(d) { return d.type == 'root' ? "end" : "start"; })
      .text(function(d) { return d.label; });
});

d3.select(self.frameElement).style("height", height + "px");

});
</script>
<pre id="details"></pre>
</body>
</html>
